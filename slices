<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Go by Example: Slices</title>
    <link rel=stylesheet href="site.css">
  </head>
  <script type="text/javascript">
    if (window.location.host == "gobyexample.com") {
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-34996217-1']);
      _gaq.push(['_trackPageview']);
      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
    }
  </script>
  <body>
    <div class="example" id="slices">
      <h2><a href="./">Go by Example</a>: Slices</h2>
      
      <table>
        
        <tr>
          <td class="docs">
            <p><em>Slices</em> คือประเภทข้อมูลสำคัญใน Go
ช่วยให้เราจัดการข้อมูลที่อยู่ในลักษณะลำดับได้มากกว่า Arrays</p>

          </td>
          <td class="code empty leading">
	        
            
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
	        <a href="http://play.golang.org/p/vHzPMLAODU"><img title="Run code" src="play.png" class="run" /></a>
            <div class="highlight"><pre><span class="kn">package</span> <span class="nx">main</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
	        
            <div class="highlight"><pre><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
	        
            <div class="highlight"><pre><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>Slices ไม่เหมือน Arrays ตรงที่ส่วนใจที่ข้อมูลที่เก็บอยู่
โดยไม่ได้ fix จำนวนข้อมูลที่เก็บแบบ Arrays
เราสร้าง slice ที่มีจำนวนข้อมูลมากกว่ากว่าศูนย์ตัวได้โดยใช้ ฟังก์ชัน make
ซึ่งเป็น builtin ฟังก์ชัน ใช้ได้เลยไม่ต้อง import
ตัวอย่างนี้คือเราสร้าง slice ของ string ที่มีจำนวนข้อมูล 3 ตัว
(โดยที่ค่าแต่ละตัวเป็นค่า zero-valued ของประเภทข้อมูลนั้น สำหรับ string คือ &ldquo;&rdquo; string ว่าง)</p>

          </td>
          <td class="code leading">
	        
            <div class="highlight"><pre>    <span class="nx">s</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">([]</span><span class="kt">string</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;emp:&quot;</span><span class="p">,</span> <span class="nx">s</span><span class="p">)</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>วิธีการอ้างอิงข้อมูลข้างในใช้  index เหมือนกับ arrays</p>

          </td>
          <td class="code leading">
	        
            <div class="highlight"><pre>    <span class="nx">s</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="p">=</span> <span class="s">&quot;a&quot;</span>
    <span class="nx">s</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="p">=</span> <span class="s">&quot;b&quot;</span>
    <span class="nx">s</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="p">=</span> <span class="s">&quot;c&quot;</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;set:&quot;</span><span class="p">,</span> <span class="nx">s</span><span class="p">)</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;get:&quot;</span><span class="p">,</span> <span class="nx">s</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p><code>len</code> เป็นฟังก์ชันหาจำนวนข้อมูลที่ slice เก็บอยู่เช่นเดียวกับ arrays</p>

          </td>
          <td class="code leading">
	        
            <div class="highlight"><pre>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;len:&quot;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="nx">s</span><span class="p">))</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>นอกจาก len และ การใช้ index อ้างอิงข้อมูลแล้ว slices ยังรองรับการจัดการ
ข้อมูลที่มากกว่า arrays
อีกหนึ่งฟังก์ชันที่สำคัญคือ <code>append</code> ซึ่งเป็น builtin ฟังก์ชันเช่นกัน
เราเอา <code>append</code> มาใช้สำหรับเพิ่มข้อมูลเข้าไปใน slices ที่มีอยู่เดิม
เสร็จแล้ว <code>append</code> จะส่งค่า slices ออกมา ซึ่งอาจจะเป็น slices ใหม่ หรือ slices เดิม
ทำให้เวลาใช้ <code>append</code> เราจะเอาตัวแปรมาเก็บค่าที่ส่งกลับมาเสมอ
เพื่อให้มั่นใจได้ว่าเป็น slices ที่เก็บข้อมูลเดิมต่อด้วยค่าที่เพิ่มไปใหม่</p>

          </td>
          <td class="code leading">
	        
            <div class="highlight"><pre>    <span class="nx">s</span> <span class="p">=</span> <span class="nb">append</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span> <span class="s">&quot;d&quot;</span><span class="p">)</span>
    <span class="nx">s</span> <span class="p">=</span> <span class="nb">append</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span> <span class="s">&quot;e&quot;</span><span class="p">,</span> <span class="s">&quot;f&quot;</span><span class="p">)</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;apd:&quot;</span><span class="p">,</span> <span class="nx">s</span><span class="p">)</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>เราสามารถ <code>copy</code> slices ได้เช่นกัน โดยใช้ฟังก์ชัน <code>copy</code> (builtin function)
ตัวอย่างเช่นเราสร้าง slice <code>c</code> ที่มีจำนวนสมาชิกเท่ากับ <code>s</code>
ซึ่งตอนนี้ทุกค่าใน <code>c</code> เป็น string ว่าง
หลังจากนั้น <code>copy</code> ค่าจาก s ไป c</p>

          </td>
          <td class="code leading">
	        
            <div class="highlight"><pre>    <span class="nx">c</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">([]</span><span class="kt">string</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="nx">s</span><span class="p">))</span>
    <span class="nb">copy</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span> <span class="nx">s</span><span class="p">)</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;cpy:&quot;</span><span class="p">,</span> <span class="nx">c</span><span class="p">)</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>Slices รองรับ operator ที่ชื่อว่า &ldquo;slice&rdquo; ซึ่งมีรูปแบบการใช้คือ
<code>slice[low:high]</code>. กำหนดค่า low และ high คั่นด้วย <code>:</code> ใน [] ข้างหลังชื่อตัวแปร slice
จากตัวอย่าง low คือ 2 และ high คือ 5
เป็นการ slice ค่าจากตัวแปร slice <code>s</code> จากตำแหน่ง 2,3,4 ออกมาเป็นเป็น slice <code>l</code></p>

          </td>
          <td class="code leading">
	        
            <div class="highlight"><pre>    <span class="nx">l</span> <span class="o">:=</span> <span class="nx">s</span><span class="p">[</span><span class="mi">2</span><span class="p">:</span><span class="mi">5</span><span class="p">]</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;sl1:&quot;</span><span class="p">,</span> <span class="nx">l</span><span class="p">)</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>ถ้าใช้แบบนี้คือ slice ตั้งแต่ 0 จนถึงตัวที่ 4 (ตัวสุดท้ายที่นับคือค่า high - 1)</p>

          </td>
          <td class="code leading">
	        
            <div class="highlight"><pre>    <span class="nx">l</span> <span class="p">=</span> <span class="nx">s</span><span class="p">[:</span><span class="mi">5</span><span class="p">]</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;sl2:&quot;</span><span class="p">,</span> <span class="nx">l</span><span class="p">)</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>ถ้าใช้แบบนี้คือ slice ตั้งแต่ 2 จนถึงตัวสุดท้ายใน <code>s</code></p>

          </td>
          <td class="code leading">
	        
            <div class="highlight"><pre>    <span class="nx">l</span> <span class="p">=</span> <span class="nx">s</span><span class="p">[</span><span class="mi">2</span><span class="p">:]</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;sl3:&quot;</span><span class="p">,</span> <span class="nx">l</span><span class="p">)</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>เราสามารถสร้างตัวแปร slice และกำหนดค่าเริ่มต้นได้แบบนี้
คล้ายๆกับ arrays แต่ไม่ต้องใส่ตัวเลขจำนวนใน []</p>

          </td>
          <td class="code leading">
	        
            <div class="highlight"><pre>    <span class="nx">t</span> <span class="o">:=</span> <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">&quot;g&quot;</span><span class="p">,</span> <span class="s">&quot;h&quot;</span><span class="p">,</span> <span class="s">&quot;i&quot;</span><span class="p">}</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;dcl:&quot;</span><span class="p">,</span> <span class="nx">t</span><span class="p">)</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>Slices ก็สามารถเอามาซ้อนกันเพื่อทำเป็นหลายมิติได้เช่นเดียวกันกับ arrays
แต่ว่าขนาดของ slices ที่ซ้อนอยู่ไม่จำเป็นมีนำนวนสมาชิกเท่ากันแบบ arrays</p>

          </td>
          <td class="code">
	        
            <div class="highlight"><pre>    <span class="nx">twoD</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">([][]</span><span class="kt">int</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
    <span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="mi">3</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
        <span class="nx">innerLen</span> <span class="o">:=</span> <span class="nx">i</span> <span class="o">+</span> <span class="mi">1</span>
        <span class="nx">twoD</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="p">=</span> <span class="nb">make</span><span class="p">([]</span><span class="kt">int</span><span class="p">,</span> <span class="nx">innerLen</span><span class="p">)</span>
        <span class="k">for</span> <span class="nx">j</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">j</span> <span class="p">&lt;</span> <span class="nx">innerLen</span><span class="p">;</span> <span class="nx">j</span><span class="o">++</span> <span class="p">{</span>
            <span class="nx">twoD</span><span class="p">[</span><span class="nx">i</span><span class="p">][</span><span class="nx">j</span><span class="p">]</span> <span class="p">=</span> <span class="nx">i</span> <span class="o">+</span> <span class="nx">j</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;2d: &quot;</span><span class="p">,</span> <span class="nx">twoD</span><span class="p">)</span>
<span class="p">}</span>
</pre></div>

          </td>
        </tr>
        
      </table>
      
      <table>
        
        <tr>
          <td class="docs">
            <p>แม้ว่า slices โครงสร้างภายในจะต่างกับ arrays
แต่เวลาใช้ <code>fmt.Println</code> จะแสดงผลคล้ายกัน</p>

          </td>
          <td class="code leading">
	        
            <div class="highlight"><pre><span class="gp">$</span> go run slices.go
<span class="go">emp: [  ]</span>
<span class="go">set: [a b c]</span>
<span class="go">get: c</span>
<span class="go">len: 3</span>
<span class="go">apd: [a b c d e f]</span>
<span class="go">cpy: [a b c d e f]</span>
<span class="go">sl1: [c d e]</span>
<span class="go">sl2: [a b c d e]</span>
<span class="go">sl3: [c d e f]</span>
<span class="go">dcl: [g h i]</span>
<span class="go">2d:  [[0] [1 2] [2 3 4]]</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>ลองเข้าไปอ่านบล็อก
<a href="http://blog.golang.org/2011/01/go-slices-usage-and-internals.html">โพสต์ที่ยอดเยี่ยม</a>
จากทีม Go สำหรับรายละเอียดที่มากขึ้น
เกี่ยวกับการออกแบบและสร้าง slices ใน Go</p>

          </td>
          <td class="code empty leading">
	        
            
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>ตอนนี้เราได้เรียนรู้เกี่ยวกับ arrays และ slices
กันไปแล้ว
ต่อไปเราดูอีกโครงสร้างข้อมูลที่สำคัญที่ Go
มีมาให้แล้วอีกอันคือ maps</p>

          </td>
          <td class="code empty">
	        
            
          </td>
        </tr>
        
      </table>
      
      
      <p class="next">
        Next example: <a href="maps">Maps</a>.
      </p>
      
      <p class="footer">
        by <a href="https://twitter.com/mmcgrana">@mmcgrana</a> | <a href="mailto:mmcgrana@gmail.com">feedback</a> | <a href="https://github.com/mmcgrana/gobyexample/blob/master/examples/slices">source</a> | <a href="https://github.com/mmcgrana/gobyexample#license">license</a>
      </p>
    </div>
  </body>
</html>
